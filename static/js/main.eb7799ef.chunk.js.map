{"version":3,"sources":["App.js","components/ResultView.jsx","components/Keyboard.jsx","index.js"],"names":["output","history","symbols","App","useState","displayValue","state","setState","updateState","toString","onClick","id","type","value","lastInput","slice","resetOutput","calculate","displayInput","display","includes","eval","replace","Number","isInteger","toFixed","error","className","ResultView","colorStyle","color","style","keys","class","Keyboard","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4yBAKIA,OAAS,GACTC,QAAU,GACVC,QAAU,CAAC,IAAK,IAAK,IAAK,KAE9B,SAASC,MAAO,IAAD,UACYC,oDAAS,CAClCH,QAAS,GACTI,aAAc,KAHD,qMACPC,MADO,cACAC,SADA,cAKRC,YAAc,WACnBD,SAAS,CAAEN,QAASA,QAAQQ,WAAYJ,aAAcL,OAAOS,cAIxDC,QAAU,SAACC,EAAIC,EAAMC,GAG1B,IAAIC,GADJd,OAASA,OAAOS,YACOM,OAAO,GAEjB,SAATH,EACQ,UAAPD,EACHK,aAAY,GACK,cAAPL,GACVX,OAASA,OAAOe,MAAM,GAAI,GAC1BP,eACiB,SAAPG,GACVM,UAAUH,GAGXI,aAAaN,EAAMC,EAAOC,IAKtBE,YAAc,SAAAG,GACnBlB,QAAU,GACVD,OAAS,GACLmB,GACHX,eAIIU,aAAe,SAACN,EAAMC,EAAOC,GACrB,SAATF,GAEHV,QAAQkB,SAASN,GACbd,OAASA,OAAOe,MAAM,GAAI,GAAKF,EAGnCb,QAAUa,EAEXL,eAGKS,UAAY,SAAZA,UAAYH,WAEjB,IAAKZ,QAAQkB,SAASN,YAAcd,OACnC,IACCC,QAAUD,OACVA,OAASqB,KAAKrB,OAAOsB,QAAQ,KAAM,UACnCtB,OAASuB,OAAOC,UAAUxB,QAAUA,OAASA,OAAOyB,QAAQ,GAC5DjB,cAEAP,QAAUD,OACVA,OAAS,GACR,MAAO0B,OACR1B,OAAS,QACTQ,cACAQ,gBAKH,OACC,kEAAKW,UAAU,OACd,kEAAKA,UAAU,aACd,2DAAC,sDAAD,CAAY1B,QAASK,MAAML,QAASD,OAAQM,MAAMD,eAClD,2DAAC,oDAAD,CAAUK,QAASA,YAMRP,2B,6BCxFf,oBAsBeyB,IAnBf,YAA0C,IAApB3B,EAAmB,EAAnBA,QAASD,EAAU,EAAVA,OAE1B6B,EAAa,CAChBC,MAAkB,UAAX9B,EAAqB,OAAS,QAGtC,OACC,yBAAK+B,MAAOF,EAAYF,UAAU,UACjC,yBAAKA,UAAU,WAAW1B,GAC1B,yBAAK0B,UAAU,UAAU3B,M,6BCZ5B,oBAGMgC,EAAO,CACZ,CAAErB,GAAI,QAASsB,MAAO,OAAQpB,MAAO,KACrC,CAAEF,GAAI,YAAasB,MAAO,OAAQpB,MAAO,MACzC,CAAEF,GAAI,WAAYsB,MAAO,OAAQpB,MAAO,KACxC,CAAEF,GAAI,IAAKsB,MAAO,MAAOpB,MAAO,KAChC,CAAEF,GAAI,IAAKsB,MAAO,MAAOpB,MAAO,KAChC,CAAEF,GAAI,IAAKsB,MAAO,MAAOpB,MAAO,KAChC,CAAEF,GAAI,QAASsB,MAAO,OAAQpB,MAAO,KACrC,CAAEF,GAAI,IAAKsB,MAAO,MAAOpB,MAAO,KAChC,CAAEF,GAAI,IAAKsB,MAAO,MAAOpB,MAAO,KAChC,CAAEF,GAAI,IAAKsB,MAAO,MAAOpB,MAAO,KAChC,CAAEF,GAAI,MAAOsB,MAAO,OAAQpB,MAAO,KACnC,CAAEF,GAAI,IAAKsB,MAAO,MAAOpB,MAAO,KAChC,CAAEF,GAAI,IAAKsB,MAAO,MAAOpB,MAAO,KAChC,CAAEF,GAAI,IAAKsB,MAAO,MAAOpB,MAAO,KAChC,CAAEF,GAAI,SAAUsB,MAAO,OAAQpB,MAAO,KACtC,CAAEF,GAAI,IAAKsB,MAAO,MAAOpB,MAAO,KAChC,CAAEF,GAAI,MAAOsB,MAAO,MAAOpB,MAAO,KAClC,CAAEF,GAAI,IAAKsB,MAAO,MAAOpB,MAAO,KAChC,CAAEF,GAAI,OAAQsB,MAAO,OAAQpB,MAAO,MAwBtBqB,IArBf,YAAgC,IAAZxB,EAAW,EAAXA,QACnB,OACC,yBAAKiB,UAAU,YACbK,EAAKG,KAAI,SAAAC,GAAG,OACZ,yBACCT,UAAU,MACVhB,GAAIyB,EAAIzB,GACRyB,IAAKA,EAAIzB,GACTD,QAAS,kBAAMA,EAAQ0B,EAAIzB,GAAIyB,EAAIH,MAAOG,EAAIvB,SAE7CuB,EAAIvB,a,8DCnCV,kDAIAwB,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,IAAD,OAEDC,SAASC,eAAe,U","file":"static/js/main.eb7799ef.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport ResultView from './components/ResultView';\nimport Keyboard from './components/Keyboard';\n\nlet output = '';\nlet history = '';\nlet symbols = ['*', '-', '+', '/'];\n\nfunction App() {\n\tconst [state, setState] = useState({\n\t\thistory: '',\n\t\tdisplayValue: ''\n\t});\n\tconst updateState = () => {\n\t\tsetState({ history: history.toString(), displayValue: output.toString() });\n\t};\n\n\t// ONCLICK BUTTON CLICK\n\tconst onClick = (id, type, value) => {\n\t\t// CONVERT TO STRING\n\t\toutput = output.toString();\n\t\tlet lastInput = output.slice(-1);\n\n\t\tif (type === 'func') {\n\t\t\tif (id === 'clear') {\n\t\t\t\tresetOutput(true);\n\t\t\t} else if (id === 'clearBack') {\n\t\t\t\toutput = output.slice(0, -1);\n\t\t\t\tupdateState();\n\t\t\t} else if (id === 'calc') {\n\t\t\t\tcalculate(lastInput);\n\t\t\t}\n\t\t} else {\n\t\t\tdisplayInput(type, value, lastInput);\n\t\t}\n\t};\n\n\t// RESET VALUES\n\tconst resetOutput = display => {\n\t\thistory = '';\n\t\toutput = '';\n\t\tif (display) {\n\t\t\tupdateState();\n\t\t}\n\t};\n\n\tconst displayInput = (type, value, lastInput) => {\n\t\tif (type === 'oper') {\n\t\t\t// REPLACE OPERATOR SYMBOL IF LASTINPUT IS OPERATOR\n\t\t\tsymbols.includes(lastInput)\n\t\t\t\t? (output = output.slice(0, -1) + value)\n\t\t\t\t: (output += value);\n\t\t} else {\n\t\t\toutput += value;\n\t\t}\n\t\tupdateState();\n\t};\n\n\tconst calculate = lastInput => {\n\t\t// CHECK IF LAST INPUT IS NUMBER AND OUTPUT IS NOT EMPTY\n\t\tif (!symbols.includes(lastInput) && output) {\n\t\t\ttry {\n\t\t\t\thistory = output;\n\t\t\t\toutput = eval(output.replace(/%/g, '*0.01'));\n\t\t\t\toutput = Number.isInteger(output) ? output : output.toFixed(3);\n\t\t\t\tupdateState();\n\t\t\t\t// UPDATE HISTORY TO RESULT AND RESET OUTPUT\n\t\t\t\thistory = output;\n\t\t\t\toutput = '';\n\t\t\t} catch (error) {\n\t\t\t\toutput = 'Error';\n\t\t\t\tupdateState();\n\t\t\t\tresetOutput();\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<ResultView history={state.history} output={state.displayValue} />\n\t\t\t\t<Keyboard onClick={onClick} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ResultView({ history, output }) {\r\n\t// CHANGE COLOR TO RED IF ERROR OCCURRED\r\n\tlet colorStyle = {\r\n\t\tcolor: output === 'Error' ? '#f11' : '#fff'\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div style={colorStyle} className=\"result\">\r\n\t\t\t<div className=\"history\">{history}</div>\r\n\t\t\t<div className=\"output\">{output}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nResultView.propTypes = {\r\n\thistory: PropTypes.string,\r\n\toutput: PropTypes.string\r\n};\r\n\r\nexport default ResultView;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst keys = [\r\n\t{ id: 'clear', class: 'func', value: 'C' },\r\n\t{ id: 'clearBack', class: 'func', value: 'CE' },\r\n\t{ id: 'multiply', class: 'oper', value: '*' },\r\n\t{ id: '9', class: 'num', value: '9' },\r\n\t{ id: '8', class: 'num', value: '8' },\r\n\t{ id: '7', class: 'num', value: '7' },\r\n\t{ id: 'minus', class: 'oper', value: '-' },\r\n\t{ id: '6', class: 'num', value: '6' },\r\n\t{ id: '5', class: 'num', value: '5' },\r\n\t{ id: '4', class: 'num', value: '4' },\r\n\t{ id: 'add', class: 'oper', value: '+' },\r\n\t{ id: '3', class: 'num', value: '3' },\r\n\t{ id: '2', class: 'num', value: '2' },\r\n\t{ id: '1', class: 'num', value: '1' },\r\n\t{ id: 'divide', class: 'oper', value: '/' },\r\n\t{ id: '0', class: 'num', value: '0' },\r\n\t{ id: 'dot', class: 'num', value: '.' },\r\n\t{ id: '%', class: 'num', value: '%' },\r\n\t{ id: 'calc', class: 'func', value: '=' }\r\n];\r\n\r\nfunction Keyboard({ onClick }) {\r\n\treturn (\r\n\t\t<div className=\"keyboard\">\r\n\t\t\t{keys.map(key => (\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"btn\"\r\n\t\t\t\t\tid={key.id}\r\n\t\t\t\t\tkey={key.id}\r\n\t\t\t\t\tonClick={() => onClick(key.id, key.class, key.value)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{key.value}\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nKeyboard.propTypes = {\r\n\tonClick: PropTypes.func\r\n};\r\n\r\nexport default Keyboard;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}